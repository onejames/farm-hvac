; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[common_env_settings]
# Pin the platform version to ensure a stable and reproducible build environment.
platform = espressif32 @ 6.6.0
board = esp32dev
framework = arduino
monitor_speed = 115200
extra_scripts = pre:scripts/git_version.py
# Use the dedicated option for setting the C++ standard for better compatibility.
# Using gnu++17 to include GNU extensions which are required by some framework headers.
board_build.cppstd = gnu++17
# Add the src directory to the include path for all environments
build_flags = -Wno-extra-tokens -I src
lib_deps =
    ESP32Async/ESPAsyncWebServer @ 3.6.0  # Pinned for stability
    ESP32Async/AsyncTCP @ 3.3.2           # Pinned for stability
    knolleary/PubSubClient @ 2.8.0        # Pinned for stability
    paulstoffregen/OneWire @ ^2.3.7       # Use latest patch for v2.3
    milesburton/DallasTemperature @ ^4.0.0 # v3.9.0 is not compatible with ARM Macs
    openenergymonitor/EmonLib @ 1.1.0     # Pinned for stability
    bblanchon/ArduinoJson @ 7.0.4         # Pinned for stability
    adafruit/Adafruit GFX Library @ 1.11.9 # Pinned for stability
    adafruit/Adafruit SSD1306 @ 2.5.10    # Pinned for stability
lib_ignore = WebServer

[env:esp32dev]
extends = common_env_settings

[env:native]
platform = native
# Add libraries here that are needed for native tests.
# The `lib_extra_dirs` setting is removed to prevent PlatformIO's Library Dependency Finder
# from discovering and using the incorrect mock library located in `test/lib/mocks`.
lib_deps = bblanchon/ArduinoJson

# By default, PlatformIO does not build files from `src` for native tests.
# `test_build_src = yes` enables this feature.
test_build_src = yes

# We then use a filter to explicitly include ONLY the source files we need for testing.
build_src_filter =
    -<*>
    +<logic/*.cpp>
    +<adapters/*.cpp>
    +<config.cpp>
    +<config/*.cpp>
    +<logging/*.cpp>
    +<state/*.cpp>
    +<fs/SPIFFSFileSystem.cpp>
    +<hardware/hardware_manager.cpp>
    +<display/display_manager.cpp>
    +<DataManager.cpp>
    +<network/MqttManager.cpp>
    +<network/PubSubClientWrapper.cpp>
    +<network/WebServerManager.cpp>
    +<application.cpp>
    +<../test/mocks/*.cpp>

# Add the 'src' directory to the include path so test files can find project headers.
# We also explicitly add `test/lib` to ensure our mock headers are found.
# We must explicitly set the C++ standard for the native build environment.
build_flags = ${common_env_settings.build_flags} -I test/mocks -std=gnu++17

# Ignore hardware-specific libraries during native testing to prevent build errors.
lib_ignore =
    ESPAsyncWebServer
    OneWire
    DallasTemperature
    EmonLib
    PubSubClient
    Adafruit GFX Library
    Adafruit SSD1306

 # Ignore specific tests when running native unit tests.
test_ignore = test_e2e, test_web_server_manager

[env:esp32_e2e_test]
extends = common_env_settings
test_build_src = yes
test_speed = 115200
build_src_filter = +<*> -<main.cpp>

# Only run tests from the test_e2e directory for this environment
test_filter = test_e2e
